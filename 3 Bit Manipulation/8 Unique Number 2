/*
        We are given an array containg n numbers. All the numbers are present twice except for two numbers 
        which are present only once. Find the unique numbers in linear time without using any extra space. 
 
                  Sample Input 
                  4
                  3 1 2 1
                  Sample Output
                  2 3

*/

#include <iostream>
using namespace std;



int main() {

    int n;
    int arr[100005];
    cin>>n;

    int num;
    int result = 0;
    for(int i=0;i<n;i++){
        cin>>num;
        arr[i] = num;
        result = result ^ num;
    }

    //xor = a ^ b
    //find the first set bit from right

    int temp = result;
    int pos = 0;
    while((temp & 1) != 1 ){
        temp = temp >> 1;
        ++pos;

    }

    //the first set bit from right is at position "pos"

    int mask = 1 << pos;

    //find those numbers which contain set bit at position "pos"
    int a = 0;
    int b = 0;
    for(int i=0;i<n;i++){
        if( (arr[i] & mask) > 0 ){
            a = a ^ arr[i];
        }
    }

    b = result ^ a;

    cout<<min(a,b)<<" "<<max(a,b)<<endl;

    
}
